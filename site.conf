server {
        listen 80;
        listen [::]:80;

        root /usr/share/nginx/html;

        # Indicate that the website doesn't use any browser features. At the moment, there is no
        # wildcard to disable all features at once
        # (https://github.com/w3c/webappsec-permissions-policy/issues/483). Therefore, we have to
        # disable each feature individually.
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()";

        # HSTS: ensures that browsers always connect over HTTPS. This prevents downgrade attacks.
        # Note: 365 days = 365 * 24 * 60 * 60 = 31536000 seconds.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Do not allow the website to be embedded in an iframe (except same origin). This prevents 
        # clickjacking attacks.
        add_header X-Frame-Options "SAMEORIGIN" always;

        index index.html;

        location / {
            # for each request on url $uri:
            # * first, try to get the file $uri/ (e.g. static images)
            # * second, route request to index.html (react router will render the correct page)
            try_files $uri $uri/ /index.html;
            # not vital, but improves performance:
            expires max;
            gzip_static on;
            gzip on;
            gzip_proxied any;
            gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        }

        location /api/ {
            proxy_pass http://nerdd-backend.dev:8000/;
        }

        location /websocket/ {
            proxy_pass http://nerdd-backend.dev:8000/websocket/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        error_page 404 /index.html;
}
